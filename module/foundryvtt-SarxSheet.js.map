{"version":3,"file":"foundryvtt-compactBeyond5eSheet.js","sources":["../../src/module/compact-beyond-5e-sheet.mjs","../../src/module/foundryvtt-compactBeyond5eSheet.mjs"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Andrew Krigline\n//\n// SPDX-License-Identifier: MIT\nimport { CompactBeyond5e } from './foundryvtt-compactBeyond5eSheet.mjs';\n\n/**\n * Extend the basic ActorSheet with some customizations to use our own templates and styles\n */\n//eslint-disable-next-line no-undef\nexport class CompactBeyond5eSheet extends dnd5e.applications.actor.ActorSheet5eCharacter {\n  constructor() {\n    super(...arguments);\n    this._debouncedSearchFilter = foundry.utils.debounce(this._handleSearchFilter, 200);\n  }\n  get template() {\n    if (\n      !game.user?.isGM &&\n      this.actor.limited &&\n      !game.settings.get(CompactBeyond5e.MODULE_ID, CompactBeyond5e.SETTINGS.expandedLimited)\n    ) {\n      return `modules/${CompactBeyond5e.MODULE_ID}/templates/character-sheet-ltd.hbs`;\n    }\n\n    return `modules/${CompactBeyond5e.MODULE_ID}/templates/character-sheet.hbs`;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n\n    // inject our own css class and filter options\n    mergeObject(options, {\n      classes: [...options.classes, 'cb5es'],\n      scrollY: [...options.scrollY, '.sheet-sidebar'],\n      height: 680,\n      filters: [\n        {\n          inputSelector: '.spellbook input.filter',\n          contentSelector: '.spellbook .inventory-list',\n        },\n        {\n          inputSelector: '.inventory input.filter',\n          contentSelector: '.inventory .inventory-list',\n        },\n        {\n          inputSelector: '.features input.filter',\n          contentSelector: '.features .inventory-list',\n        },\n      ],\n      // template: `modules/${CompactBeyond5e.MODULE_ID}/templates/character-sheet.hbs`,\n    });\n\n    return options;\n  }\n\n  _handleSearchFilter(event, query, rgx, html) {\n    let anyMatch = !query;\n    const itemRows = html.querySelectorAll('.item-list > .item');\n    //eslint-disable-next-line no-undef\n    // log(false, 'onSearchFilter firing', {\n    //   query,\n    //   rgx,\n    //   html,\n    //   itemRows,\n    // });\n    for (let li of itemRows) {\n      if (!query) {\n        li.classList.remove('hidden');\n        continue;\n      }\n      const title = li.querySelector('.item-name')?.textContent;\n      if (!title) {\n        continue;\n      }\n      const match = rgx.test(SearchFilter.cleanQuery(title));\n      li.classList.toggle('hidden', !match);\n      if (match) {\n        //eslint-disable-next-line no-unused-vars\n        anyMatch = true;\n      }\n    }\n  }\n\n  /** @override */\n  _onSearchFilter(...args) {\n    this._debouncedSearchFilter(...args);\n  }\n\n  /**\n   * Inject the actions list into the actions tab before the render cycle completes\n   */\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n    const actionsListApi = game.modules.get('character-actions-list-5e')?.api;\n\n    try {\n      const actionsTab = html.find('.actions');\n\n      const actionsTabHtml = await actionsListApi?.renderActionsList(this.actor);\n\n      actionsTab.html(actionsTabHtml);\n    } catch (e) {\n      CompactBeyond5e.log(true, e);\n    }\n\n    return html;\n  }\n\n  /**\n   * Method to calculate the spell attack modifier\n   */\n  _getSpellAttackMod() {\n    const { abilities, attributes, bonuses } = this.actor.system;\n\n    // calculate the spell attack modifier\n    let spellAttackModFormula = [\n      new Intl.NumberFormat('en-US', {\n        signDisplay: 'exceptZero',\n      })\n        .format((abilities[attributes.spellcasting || 'int']?.mod ?? 0) + attributes.prof)\n        .toString(),\n    ];\n\n    // apply the bonuses if they are equivalent\n    if (bonuses.msak.attack === bonuses.rsak.attack) {\n      spellAttackModFormula.push(bonuses.msak.attack);\n    } else if (!!bonuses.msak.attack && !!bonuses.rsak.attack) {\n      const formulaA = new Roll(bonuses.msak.attack);\n      const formulaB = new Roll(bonuses.rsak.attack);\n\n      // apply the lesser deterministic bonus\n      if (formulaA.isDeterministic && formulaB.isDeterministic) {\n        spellAttackModFormula.push(\n          Math.min(formulaA.evaluate({ async: false }).total, formulaB.evaluate({ async: false }.total))\n        );\n      }\n    }\n\n    return spellAttackModFormula.length === 1\n      ? spellAttackModFormula[0]\n      : //eslint-disable-next-line no-undef\n        dnd5e.dice.simplifyRollFormula(spellAttackModFormula.join(' + '));\n  }\n\n  /**\n   * Extend and override the sheet data\n   */\n  async getData() {\n    const sheetData = await super.getData();\n\n    const { abilities, attributes, bonuses, details } = this.actor.system;\n\n    const lockSheetsEnabled = game.settings.get(CompactBeyond5e.MODULE_ID, CompactBeyond5e.SETTINGS.lockSheets);\n\n    const options = {\n      locked: lockSheetsEnabled ? CompactBeyond5e.isLocked(this.actor._id) ?? true : false,\n    };\n\n    if (lockSheetsEnabled) {\n      CompactBeyond5e.bindLock(this.actor._id);\n    }\n\n    sheetData.options = options;\n\n    sheetData.moduleFilePath = `modules/${CompactBeyond5e.MODULE_ID}/`;\n    sheetData.nextLevel = details.level + 1;\n\n    sheetData.spellAttackMod = this._getSpellAttackMod();\n    sheetData.spellSaveDcWithMods = attributes.spelldc + bonuses.spell.dc;\n\n    // simplify the formula and apply if it is a string\n    if (typeof sheetData.spellSaveDcWithMods === 'string') {\n      //eslint-disable-next-line no-undef\n      sheetData.spellSaveDcWithMods = dnd5e.dice.simplifyRollFormula(sheetData.spellSaveDcWithMods);\n    }\n\n    CompactBeyond5e.log(false, {\n      abilities: abilities,\n      ability: abilities[attributes.spellcasting || 'int'],\n      mod: abilities[attributes.spellcasting || 'int']?.mod ?? 0,\n      prof: attributes.prof,\n      spellAttackMod: sheetData.spellAttackMod,\n      options: options,\n    });\n\n    return sheetData;\n  }\n}\n","// SPDX-FileCopyrightText: 2023 Andrew Krigline\n//\n// SPDX-License-Identifier: MIT\nimport { CompactBeyond5eSheet } from './compact-beyond-5e-sheet.mjs';\n\nexport class CompactBeyond5e {\n  static MODULE_ID = 'compact-beyond-5e-sheet';\n  static MODULE_TITLE = 'Compact DnDBeyond 5e Character Sheet';\n  static PLAYER_SHEETS = [];\n\n  static SETTINGS = {\n    expandedLimited: 'expanded-limited',\n    darkMode: 'dark-mode',\n    // displayPassivePerception: 'display-passive-per',\n    // displayPassiveInsight: 'display-passive-ins',\n    // displayPassiveInvestigation: 'display-passive-inv',\n    // displayPassiveStealth: 'display-passive-ste',\n    showSpellSlotBubbles: 'show-spell-slot-bubbles',\n    showFullCurrencyNames: 'show-full-currency-names',\n    lockSheets: 'lock-sheets',\n  };\n\n  /**\n   * Log helper that uses devMode to avoid spamming the console in prod\n   * @param {boolean} force\n   * @param  {...any} args\n   */\n  static log(force, ...args) {\n    const shouldLog = force || game.modules.get('_dev-mode')?.api?.getPackageDebugValue(this.MODULE_ID);\n\n    if (shouldLog) {\n      console.log(this.MODULE_ID, '|', ...args);\n    }\n  }\n\n  static bindLock(actorId, status = true) {\n    const hasKey = this.PLAYER_SHEETS.some((el) => el.key === actorId);\n\n    if (!hasKey) {\n      this.PLAYER_SHEETS.push({ key: actorId, status: status });\n    }\n  }\n\n  static isLocked(actorId) {\n    const character = this.PLAYER_SHEETS.find((el) => el.key === actorId);\n    return character?.status ?? null;\n  }\n\n  static toggleLock(actorId) {\n    const character = this.PLAYER_SHEETS.find((el) => el.key === actorId);\n    character.status = !character.status;\n  }\n\n  static registerSettings() {\n    game.settings.register(this.MODULE_ID, this.SETTINGS.expandedLimited, {\n      name: 'CB5ES.settings.expandedLimited.Label',\n      default: false,\n      type: Boolean,\n      scope: 'world',\n      config: true,\n      hint: 'CB5ES.settings.expandedLimited.Hint',\n    });\n\n    game.settings.register(this.MODULE_ID, this.SETTINGS.lockSheets, {\n      name: 'CB5ES.settings.lockSheets.Label',\n      default: false,\n      type: Boolean,\n      scope: 'world',\n      config: true,\n      hint: 'CB5ES.settings.lockSheets.Hint',\n    });\n\n    const darkModeClass = 'cb5es-dark-mode';\n    game.settings.register(this.MODULE_ID, this.SETTINGS.darkMode, {\n      name: 'CB5ES.settings.darkMode.Label',\n      type: String,\n      scope: 'client',\n      config: true,\n      default: 'default',\n      hint: 'CB5ES.settings.darkMode.Hint',\n      choices: {\n        default: 'CB5ES.settings.darkMode.default',\n        dark: 'CB5ES.settings.darkMode.dark',\n      },\n      onChange: (data) => {\n        data === 'dark'\n          ? document.querySelector('html').classList.add(darkModeClass)\n          : document.querySelector('html').classList.remove(darkModeClass);\n      },\n    });\n    const colourScheme = game.settings.get(this.MODULE_ID, this.SETTINGS.darkMode);\n    colourScheme === 'dark' && document.querySelector('html').classList.add(darkModeClass);\n\n    game.settings.register(this.MODULE_ID, this.SETTINGS.showSpellSlotBubbles, {\n      name: 'CB5ES.settings.showSpellSlotBubbles.Label',\n      default: true,\n      type: Boolean,\n      scope: 'client',\n      config: true,\n      hint: 'CB5ES.settings.showSpellSlotBubbles.Hint',\n    });\n\n    game.settings.register(this.MODULE_ID, this.SETTINGS.showFullCurrencyNames, {\n      name: 'CB5ES.settings.showFullCurrencyNames.Label',\n      default: false,\n      type: Boolean,\n      scope: 'client',\n      config: true,\n      hint: 'CB5ES.settings.showFullCurrencyNames.Hint',\n    });\n\n    // game.settings.register(this.MODULE_ID, this.SETTINGS.displayPassivePerception, {\n    //   name: 'CB5ES.settings.displayPassives.prc.Label',\n    //   default: false,\n    //   type: Boolean,\n    //   scope: 'world',\n    //   config: true,\n    // });\n    // game.settings.register(this.MODULE_ID, this.SETTINGS.displayPassiveInsight, {\n    //   name: 'CB5ES.settings.displayPassives.ins.Label',\n    //   default: false,\n    //   type: Boolean,\n    //   scope: 'world',\n    //   config: true,\n    // });\n    // game.settings.register(this.MODULE_ID, this.SETTINGS.displayPassiveInvestigation, {\n    //   name: 'CB5ES.settings.displayPassives.inv.Label',\n    //   default: false,\n    //   type: Boolean,\n    //   scope: 'world',\n    //   config: true,\n    // });\n    // game.settings.register(this.MODULE_ID, this.SETTINGS.displayPassiveStealth, {\n    //   name: 'CB5ES.settings.displayPassives.ste.Label',\n    //   default: false,\n    //   type: Boolean,\n    //   scope: 'world',\n    //   config: true,\n    // });\n  }\n\n  // Add currency abbreviations to actor\n  // eslint-disable-next-line no-unused-vars\n  static addCurrencyAbbreviations(app, html, data) {\n    const currencies = CONFIG.DND5E.currencies;\n    const labels = html.find('.currency-abbreviation');\n    for (let i in currencies) {\n      let label = labels.filter(`.${i}`);\n      if (game.settings.get(this.MODULE_ID, this.SETTINGS.showFullCurrencyNames)) {\n        label.html(currencies[i].label);\n      } else {\n        label.html(currencies[i].abbreviation);\n      }\n    }\n  }\n\n  // Add Spell Slot Marker\n  // eslint-disable-next-line no-unused-vars\n  static spellSlotMarker(app, html, data) {\n    if (!game.settings.get(this.MODULE_ID, this.SETTINGS.showSpellSlotBubbles)) {\n      return;\n    }\n\n    let actor = app.actor;\n    // let items = data.actor.items;\n    let options = ['pact', 'spell1', 'spell2', 'spell3', 'spell4', 'spell5', 'spell6', 'spell7', 'spell8', 'spell9'];\n    for (let o of options) {\n      let max = html.find(`.spell-max[data-level=${o}]`);\n      let name = max.closest('.spell-slots');\n      let spellData = actor.system.spells[o];\n      if (spellData.max === 0) {\n        continue;\n      }\n      let contents = ``;\n      for (let i = 1; i <= spellData.max; i++) {\n        if (i <= spellData.value) {\n          contents += `<span class=\"dot\"></span>`;\n        } else {\n          contents += `<span class=\"dot empty\"></span>`;\n        }\n      }\n      name.before(`<div class=\"spellSlotMarker\">${contents}</div>`);\n    }\n\n    html.find('.spellSlotMarker .dot').mouseenter((ev) => {\n      const parentEl = ev.currentTarget.parentElement;\n      const index = [...parentEl.children].indexOf(ev.currentTarget);\n      const dots = parentEl.querySelectorAll('.dot');\n\n      if (ev.currentTarget.classList.contains('empty')) {\n        for (let i = 0; i < dots.length; i++) {\n          if (i <= index) {\n            dots[i].classList.contains('empty') ? dots[i].classList.add('change') : '';\n          }\n        }\n      } else {\n        for (let i = 0; i < dots.length; i++) {\n          if (i >= index) {\n            dots[i].classList.contains('empty') ? '' : dots[i].classList.add('change');\n          }\n        }\n      }\n    });\n\n    html.find('.spellSlotMarker .dot').mouseleave((ev) => {\n      const parentEl = ev.currentTarget.parentElement;\n      $(parentEl).find('.dot').removeClass('change');\n    });\n\n    html.find('.spellSlotMarker .dot').click(async (ev) => {\n      const index = [...ev.currentTarget.parentElement.children].indexOf(ev.currentTarget);\n      const slots = $(ev.currentTarget).parents('.spell-level-slots');\n      const spellLevel = slots.find('.spell-max').data('level');\n      if (spellLevel) {\n        let path = `data.spells.${spellLevel}.value`;\n        if (ev.currentTarget.classList.contains('empty')) {\n          await actor.update({\n            [path]: index + 1,\n          });\n        } else {\n          await actor.update({\n            [path]: index,\n          });\n        }\n      }\n    });\n  }\n\n  static async preloadTemplates() {\n    const templatePaths = [\n      'assets/armor-class.hbs',\n      'templates/character-sheet-ltd.hbs',\n      'templates/character-sheet.hbs',\n      'templates/parts/actor-features.hbs',\n      'templates/parts/actor-inventory.hbs',\n      'templates/parts/actor-spellbook.hbs',\n      'templates/parts/actor-traits.hbs',\n      'templates/parts/sheet-header.hbs',\n      'templates/parts/sheet-sidebar.hbs',\n    ];\n\n    return loadTemplates(templatePaths.map((path) => `modules/${this.MODULE_ID}/${path}`));\n  }\n\n  /**\n   * Initialize the module\n   * Registers hooks and sheets\n   */\n  static init() {\n    Handlebars.registerHelper('cb5es-isEmpty', foundry.utils.isEmpty);\n\n    Actors.registerSheet('dnd5e', CompactBeyond5eSheet, {\n      label: 'Compact D&D Beyond-like',\n      makeDefault: false,\n      types: ['character'],\n    });\n\n    Hooks.once('devModeReady', ({ registerPackageDebugFlag }) => {\n      registerPackageDebugFlag(this.MODULE_ID);\n    });\n\n    Hooks.once('init', () => {\n      this.log(true, `Initializing ${this.MODULE_ID}`);\n\n      // Register custom module settings\n      this.registerSettings();\n\n      // Preload Handlebars templates\n      this.preloadTemplates();\n    });\n\n    Hooks.on('renderCompactBeyond5eSheet', (app, html, data) => {\n      this.spellSlotMarker(app, html, data);\n      this.addCurrencyAbbreviations(app, html, data);\n\n      if (game.settings.get(this.MODULE_ID, this.SETTINGS.lockSheets)) {\n        // Make a header element and attach it to the window title.\n        // Definitely not the most official way of doing things, but it works.\n        this.bindLock(data.actor._id);\n        const headerbtn = document.createElement('a');\n        headerbtn.classList.add('control');\n        headerbtn.innerText = this.isLocked(data.actor._id) ? 'Locked' : 'Unlocked';\n        headerbtn.onclick = () => {\n          this.toggleLock(data.actor._id);\n          app.close();\n\n          // This will wait 250 milliseconds to reopen the sheet.\n          setTimeout(() => {\n            app.render(true);\n          }, 250);\n        };\n\n        html.find('.window-title')[0].after(headerbtn);\n      }\n    });\n  }\n}\n\nCompactBeyond5e.init();\n"],"names":[],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}